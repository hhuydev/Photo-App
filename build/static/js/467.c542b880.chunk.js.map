{"version":3,"file":"static/js/467.c542b880.chunk.js","mappings":"6MAcA,SAASA,EAAOC,GACd,IAAQC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,cAETC,EAAcD,EAChB,CAAEE,gBAAgB,OAAD,OAASF,EAAT,MACjB,GAEJ,OACE,oBAASG,UAAU,SAASC,MAAOH,EAAnC,UACE,eAAIE,UAAU,gBAAd,SAA+BJ,MAdrCF,EAAOQ,aAAe,CACpBN,MAAO,GACPC,cAAe,IAiBjB,QC5BaM,EAAyB,CACpC,CAAEC,MAAO,EAAGC,MAAO,cACnB,CAAED,MAAO,EAAGC,MAAO,aACnB,CAAED,MAAO,EAAGC,MAAO,UACnB,CAAED,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,W,oBCiBrB,SAASC,EAAWX,GAClB,IAAQY,EAAoDZ,EAApDY,MAAOC,EAA6Cb,EAA7Ca,KAAMC,EAAuCd,EAAvCc,KAAMJ,EAAiCV,EAAjCU,MAAOK,EAA0Bf,EAA1Be,YAAaC,EAAahB,EAAbgB,SACvCC,EAASL,EAATK,KACAC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVC,EAAYF,EAAOD,IAASE,EAAQF,GAE1C,OACE,UAAC,KAAD,WACGP,IAAS,SAAC,KAAD,CAAOW,IAAKJ,EAAZ,SAAmBP,KAE7B,SAAC,MAAD,gBACEY,GAAIL,GACAL,GAFN,IAGEE,KAAMA,EACNE,SAAUA,EACVD,YAAaA,EACbQ,QAASH,MAEX,SAAC,KAAD,CAAcH,KAAMA,EAAMO,UAAWC,EAAAA,QAzB3Cd,EAAWJ,aAAe,CACxBO,KAAM,OACNJ,MAAO,GACPK,YAAa,GACbC,UAAU,GA0BZ,Q,6BCjCAU,EAAYnB,aAAe,CACzBU,KAAM,GACNU,SAAU,GACVC,iBAAkB,KAClBC,mBAAoB,MAGtB,IAAMC,EAAoB,WACxB,IAAMC,EAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UACjC,MAAM,4BAAN,OAAmCH,EAAnC,aAGF,SAASL,EAAY1B,GACnB,IAAQiB,EAAyDjB,EAAzDiB,KAAMU,EAAmD3B,EAAnD2B,SAAUC,EAAyC5B,EAAzC4B,iBAAkBC,EAAuB7B,EAAvB6B,mBAEpCM,EAAsB,mCAAG,oFACzBP,IACIQ,EAAiBN,IACvBF,EAAiBQ,IAHU,2CAAH,qDAO5B,OACE,iBAAK/B,UAAU,eAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,SAAC,KAAD,CACEgC,SAAO,EACPpB,KAAMA,EACNqB,MAAM,UACNC,OAAQV,EACRW,QAASL,EALX,+BAWF,gBAAK9B,UAAU,sBAAf,SACGsB,IACC,gBACEc,IAAKd,EACLe,IAAI,kDACJC,QAASR,SAQrB,QC5CA,SAASS,EAAiB5C,GACxB,IAAQY,EAAuBZ,EAAvBY,MAAOC,EAAgBb,EAAhBa,KAAMH,EAAUV,EAAVU,MACbO,EAAwBL,EAAxBK,KAAMR,EAAkBG,EAAlBH,MAAO8B,EAAW3B,EAAX2B,OACbrB,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVC,EAAYF,EAAOD,IAASE,EAAQF,GAM1C,OACE,UAAC,KAAD,WACGP,IAAS,SAAC,KAAD,CAAOW,IAAKJ,EAAZ,SAAmBP,KAE7B,SAAC,EAAD,CACEO,KAAMA,EACNU,SAAUlB,EACVmB,iBAXuB,SAACiB,GAC5BhC,EAAKiC,cAAc7B,EAAM4B,IAWrBhB,mBAAoBU,KAGtB,gBAAKlC,UAAWe,EAAY,aAAe,MAC3C,SAAC,KAAD,CAAcH,KAAMA,EAAMO,UAAWC,EAAAA,QA1B3CmB,EAAiBrC,aAAe,CAC9BG,MAAO,IA8BT,Q,UCrBA,SAASqC,EAAY/C,GACnB,IAAQY,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,KAAMmC,EAA0ChD,EAA1CgD,QAAStC,EAAiCV,EAAjCU,MAAOK,EAA0Bf,EAA1Be,YAAaC,EAAahB,EAAbgB,SAC1CC,EAAgBL,EAAhBK,KAAMR,EAAUG,EAAVH,MACNS,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,QACVC,EAAYF,EAAOD,IAASE,EAAQF,GACpCgC,EAAiBD,EAAQE,MAAK,SAACC,GAAD,OAAYA,EAAO1C,QAAUA,KAgBjE,OACE,UAAC,KAAD,WACGC,IAAS,SAAC,KAAD,CAAOW,IAAKJ,EAAZ,SAAmBP,KAE7B,SAAC,MAAD,gBACEY,GAAIL,GACAL,GAFN,IAGEH,MAAOwC,EACPG,SAtB6B,SAACH,GAClC,IAAMI,EAAgBJ,EAClBA,EAAexC,MACfwC,EAEEK,EAAc,CAClBC,OAAQ,CACNtC,KAAMA,EACNR,MAAO4C,IAGXzC,EAAMwC,SAASE,IAYXvC,YAAaA,EACbyC,WAAYxC,EACZgC,QAASA,EACT3C,UAAWe,EAAY,aAAe,OAExC,SAAC,KAAD,CAAcH,KAAMA,EAAMO,UAAWC,EAAAA,QA1C3CsB,EAAYxC,aAAe,CACzBG,MAAO,GACPK,YAAa,GACbC,UAAU,EACVgC,QAAS,IA2CX,Q,SC7CA,SAASS,EAAUzD,GACjB,IAAQ0D,EAA6B1D,EAA7B0D,cAAeC,EAAc3D,EAAd2D,UAEjBC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1C7D,MAAO4D,EAAAA,KAAaE,SAAS,2BAE7BC,WAAYH,EAAAA,KAAaE,SAAS,2BAA2BE,WAE7DC,MAAOL,EAAAA,KAAaM,KAAK,aAAc,CACrCC,GAAI,EACJC,KAAMR,EAAAA,KAAaE,SAAS,2BAC5BO,UAAWT,EAAAA,KAAaU,kBAK5B,OACE,SAAC,KAAD,CACEb,cAAeA,EACfE,iBAAkBA,EAClBY,SAAUxE,EAAMwE,SAHlB,SAKG,SAACC,GACA,IAAQC,EAA0CD,EAA1CC,OAAQxD,EAAkCuD,EAAlCvD,OAAQC,EAA0BsD,EAA1BtD,QAASwD,EAAiBF,EAAjBE,aAEjC,OADAC,QAAQC,IAAI,CAAEH,OAAAA,EAAQxD,OAAAA,EAAQC,QAAAA,KAE5B,UAAC,KAAD,YACE,SAAC,KAAD,CACEF,KAAK,QACLO,UAAWb,EACXD,MAAM,QACNK,YAAY,wBAEd,SAAC,KAAD,CACEE,KAAK,aACLO,UAAWuB,EACXrC,MAAM,WACNK,YAAY,8BACZiC,QAASxC,KAEX,SAAC,KAAD,CACES,KAAK,QACLO,UAAWoB,EACXlC,MAAM,WAGR,SAAC,KAAD,WACE,UAAC,KAAD,CAAQI,KAAK,SAASwB,MAAOqB,EAAY,UAAY,UAArD,UACGgB,IAAgB,SAAC,KAAD,CAASG,KAAK,OAC9BnB,EAAY,eAAiB,+BArD9CF,EAAUlD,aAAe,CACvBiE,SAAU,MA8DZ,Q,oBCNA,MA3DA,SAAqBxE,GACnB,IAAM+E,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACRC,GAAYC,EAAAA,EAAAA,MAAZD,QACFxB,GAAawB,EAEbE,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAC/B,IAAMC,EAAaD,EAAME,OAAOvC,MAAK,SAACwC,GAAD,OAAOA,EAAEpE,MAAQ6D,KAEtD,OADAP,QAAQC,IAAI,CAAEY,OAAQF,EAAME,OAAQN,QAAAA,EAASK,WAAAA,IACtCA,KAETZ,QAAQC,IAAI,CAAEM,QAAAA,EAASE,YAAAA,IAEvB,IAAM3B,EAAgBC,EAClB,CACE1D,MAAO,GACP+D,WAAY,KACZE,MAAO,IAETmB,EAyBJ,OACE,iBAAKhF,UAAU,aAAf,WACE,SAAC,EAAD,CAAQJ,MAAM,0CAEd,gBAAKI,UAAU,mBAAf,UACE,SAAC,EAAD,CACEmE,SA9Ba,SAACE,GACpB,OAAO,IAAIiB,SAAQ,SAACC,GAClBhB,QAAQC,IAAI,gBAAiBH,GAE7BmB,YAAW,WACT,GAAIlC,EAAW,CACb,IAAMmC,GAAQ,kBACTpB,GADS,IAEZpD,ICxCiByE,EDwCA,ICxCKC,EDwCE,MCvC3BD,EAAM/D,KAAKC,MAAMD,KAAKE,UAAY8D,EAAMD,ODyCjCE,GAASC,EAAAA,EAAAA,IAASJ,GACxBlB,QAAQC,IAAI,CAAEoB,OAAAA,IACdlB,EAASkB,OACJ,CAEL,IAAMA,GAASE,EAAAA,EAAAA,IAAYzB,GAC3BK,EAASkB,GChDS,IAACF,EAAKC,IDkDzB,KACHf,EAAQmB,KAAK,WACbR,GAAQ,OAWJlC,cAAeA,EACfC,UAAWA,UE3Df0C,EAAY,SAACrG,GACjB,IAAQkE,EAAsClE,EAAtCkE,MAAOoC,EAA+BtG,EAA/BsG,YAAaC,EAAkBvG,EAAlBuG,cAU5B,OACE,iBAAKlG,UAAU,QAAf,WACE,gBAAKoC,IAAKyB,EAAMA,MAAOxB,IAAKwB,EAAMjE,SAElC,iBAAKI,UAAU,iBAAf,WACE,eAAIA,UAAU,eAAd,SAA8B6D,EAAMjE,SAEpC,iBAAKI,UAAU,iBAAf,WACE,0BACE,SAAC,KAAD,CAAQgC,SAAO,EAACyC,KAAK,KAAKxC,MAAM,QAAQE,QAjB1B,WAClB8D,GAAaA,EAAYpC,IAgBrB,qBAIF,0BACE,SAAC,KAAD,CACE7B,SAAO,EACPyC,KAAK,KACLxC,MAAM,SACNE,QAtBc,WACpB+D,GAAeA,EAAcrC,IAiBzB,gCAqBZmC,EAAU9F,aAAe,CACvB2D,MAAO,GACPoC,YAAa,KACbC,cAAe,MAGjB,QCpDMC,EAAY,SAACxG,GACjB,IAAQyG,EAAoDzG,EAApDyG,UAAWC,EAAyC1G,EAAzC0G,iBAAkBC,EAAuB3G,EAAvB2G,mBACrC,OACE,SAAC,KAAD,UACGF,EAAUG,KAAI,SAAC1C,GAAD,OACb,SAAC,KAAD,CAAuB2C,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAzC,UACE,SAAC,EAAD,CACE7C,MAAOA,EACPoC,YAAaI,EACbH,cAAeI,KAJTzC,EAAMjE,aAkBxBuG,EAAUjG,aAAe,CACvBkG,UAAW,KACXC,iBAAkB,KAClBC,mBAAoB,MAGtB,QCtBA,EAPe,CACbK,U,QACAC,Q,QACAC,Y,QACAC,Q,mBCsCF,MApCA,SAAkBnH,GAChB,IAAMyF,GAASH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAME,UACtCR,GAAUC,EAAAA,EAAAA,MACVH,GAAWC,EAAAA,EAAAA,MAcjB,OACE,iBAAK3E,UAAU,aAAf,WACE,SAAC,EAAD,CAAQJ,MAAM,mCAAyBC,cAAekH,EAAAA,WAEtD,UAAC,KAAD,CAAW/G,UAAU,cAArB,WACE,gBAAKA,UAAU,OAAf,UACE,SAAC,KAAD,CAAMgH,GAAG,cAAT,8BAGF,SAAC,EAAD,CACEZ,UAAWhB,EACXiB,iBAvBqB,SAACxC,GAC5BU,QAAQC,IAAI,SAAUX,GACtB,IAAMoD,EAAY,kBAAcpD,EAAM5C,IACtC2D,EAAQmB,KAAKkB,IAqBPX,mBAlBuB,SAACzC,GAC9BU,QAAQC,IAAI,WAAYX,GACxB,IAAM+B,GAASsB,EAAAA,EAAAA,IAAYrD,EAAM5C,IACjCyD,EAASkB,aCDb,MAhBA,SAAejG,GACb,IAAMwH,GAAQC,EAAAA,EAAAA,MAGd,OAFA7C,QAAQC,IAAI,CAAE2C,MAAAA,KAGZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOE,OAAK,EAACC,KAAMH,EAAMI,IAAKpG,UAAWqG,KAEzC,SAAC,KAAD,CAAOF,KAAI,UAAKH,EAAMI,IAAX,QAAsBpG,UAAWsG,KAC5C,SAAC,KAAD,CAAOH,KAAI,UAAKH,EAAMI,IAAX,aAA2BpG,UAAWsG,KAEjD,SAAC,KAAD,CAAOtG,UAAWuG,EAAAA,S","sources":["components/Banner/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","components/RandomPhoto/index.jsx","custom-fields/RandomPhotoField/index.jsx","custom-fields/SelectField/index.jsx","features/Photo/components/PhotoForm.jsx","features/Photo/pages/AddEdit/index.jsx","utils/common.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","constants/images.js","features/Photo/pages/Main/index.jsx","features/Photo/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: \"\",\r\n  backgroundUrl: \"\",\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Education\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Animals\" },\r\n  { value: 5, label: \"Styles\" },\r\n];\r\n","import { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n};\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props;\r\n  const { name } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <Input\r\n        id={name}\r\n        {...field}\r\n        type={type}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        invalid={showError}\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./RandomPhoto.scss\";\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBlur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: \"\",\r\n  imageUrl: \"\",\r\n  onImageUrlChange: null,\r\n  onRandomButtonBlur: null,\r\n};\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n};\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRandomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random a photo\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"Ooops ... not found. Please click random again!\"\r\n            onError={handleRandomPhotoClick}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;\r\n","import RandomPhoto from \"components/RandomPhoto\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n        // className={showError}\r\n      />\r\n      <div className={showError ? \"is-invalid\" : \"\"}></div>\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;\r\n","import { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  options: PropTypes.array,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n  options: [],\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { field, form, options, label, placeholder, disabled } = props;\r\n  const { name, value } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n  const selectedOption = options.find((option) => option.value === value);\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <Select\r\n        id={name}\r\n        {...field}\r\n        value={selectedOption}\r\n        onChange={handleSelectedOptionChange}\r\n        placeholder={placeholder}\r\n        isDisabled={disabled}\r\n        options={options}\r\n        className={showError ? \"is-invalid\" : \"\"}\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import { PHOTO_CATEGORY_OPTIONS } from \"constants/global\";\r\nimport InputField from \"custom-fields/InputField\";\r\nimport RandomPhotoField from \"custom-fields/RandomPhotoField\";\r\nimport SelectField from \"custom-fields/SelectField\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button, FormGroup, Spinner } from \"reactstrap\";\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is required.\"),\r\n\r\n    categoryId: Yup.number().required(\"This field is required.\").nullable(),\r\n\r\n    photo: Yup.string().when(\"categoryId\", {\r\n      is: 1,\r\n      then: Yup.string().required(\"This field is required.\"),\r\n      otherwise: Yup.string().notRequired(),\r\n    }),\r\n  });\r\n\r\n  // npm i --save react-select\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              label=\"Title\"\r\n              placeholder=\"Eg: Wow nature ...\"\r\n            />\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              label=\"Category\"\r\n              placeholder=\"What's your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color={isAddMode ? \"primary\" : \"success\"}>\r\n                {isSubmitting && <Spinner size=\"sm\" />}\r\n                {isAddMode ? \"Add to album\" : \"Update your photo\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import Banner from \"components/Banner\";\r\nimport PhotoForm from \"features/Photo/components/PhotoForm\";\r\nimport { addPhoto, updatePhoto } from \"features/Photo/photoSlice\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { randomNumber } from \"utils/common\";\r\nimport \"./styles.scss\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editedPhoto = useSelector((state) => {\r\n    const foundPhoto = state.photos.find((x) => x.id === +photoId);\r\n    console.log({ photos: state.photos, photoId, foundPhoto });\r\n    return foundPhoto;\r\n  });\r\n  console.log({ photoId, editedPhoto });\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editedPhoto;\r\n  const handleSubmit = (values) => {\r\n    return new Promise((resolve) => {\r\n      console.log(\"Form submit: \", values);\r\n\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const newPhoto = {\r\n            ...values,\r\n            id: randomNumber(10000, 99999),\r\n          };\r\n          const action = addPhoto(newPhoto);\r\n          console.log({ action });\r\n          dispatch(action);\r\n        } else {\r\n          // Do something here\r\n          const action = updatePhoto(values);\r\n          dispatch(action);\r\n        }\r\n      }, 2000);\r\n      history.push(\"/photos\");\r\n      resolve(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner title=\"Pick your amazing photo 😎\" />\r\n\r\n      <div className=\"photo-edit__form\">\r\n        <PhotoForm\r\n          onSubmit={handleSubmit}\r\n          initialValues={initialValues}\r\n          isAddMode={isAddMode}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","export const randomNumber = (min, max) => {\r\n  return min + Math.trunc(Math.random() * (max - min));\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./PhotoCard.scss\";\r\n\r\nconst PhotoCard = (props) => {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              outline\r\n              size=\"sm\"\r\n              color=\"danger\"\r\n              onClick={handleRemoveClick}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n};\r\n\r\nexport default PhotoCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport PhotoCard from \"../PhotoCard\";\r\n\r\nconst PhotoList = (props) => {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n  return (\r\n    <Row>\r\n      {photoList.map((photo) => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: null,\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nexport default PhotoList;\r\n","import orangeBackground from \"../assets/images/orange-bg.jpg\";\r\nimport blueBackground from \"../assets/images/blue-bg.jpg\";\r\nimport colorfulBackground from \"../assets/images/colorful-bg.jpg\";\r\nimport pinkBackground from \"../assets/images/pink-bg.jpg\";\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground,\r\n};\r\n\r\nexport default Images;\r\n","import Banner from \"components/Banner\";\r\nimport PhotoList from \"features/Photo/components/PhotoList\";\r\nimport Images from \"constants/images\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport { removePhoto } from \"features/Photo/photoSlice\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  const photos = useSelector((state) => state.photos);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePhotoEditClick = (photo) => {\r\n    console.log(\"Edit: \", photo);\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n    history.push(editPhotoUrl);\r\n  };\r\n\r\n  const handlePhotoRemoveClick = (photo) => {\r\n    console.log(\"Remove: \", photo);\r\n    const action = removePhoto(photo.id);\r\n    dispatch(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"Your awesome photos 🎉\" backgroundUrl={Images.PINK_BG} />\r\n\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n          <Link to=\"/photos/add\">Add new photo</Link>\r\n        </div>\r\n\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import NotFound from \"components/NotFound\";\r\nimport React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport AddEditPage from \"./pages/AddEdit\";\r\nimport MainPage from \"./pages/Main\";\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  const match = useRouteMatch();\r\n  console.log({ match });\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={match.url} component={MainPage} />\r\n\r\n      <Route path={`${match.url}/add`} component={AddEditPage} />\r\n      <Route path={`${match.url}/:photoId`} component={AddEditPage} />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","errors","touched","showError","for","id","invalid","component","FormFeedback","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","randomImageUrl","outline","color","onBlur","onClick","src","alt","onError","RandomPhotoField","newImageUrl","setFieldValue","SelectField","options","selectedOption","find","option","onChange","selectedValue","changeEvent","target","isDisabled","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","photo","when","is","then","otherwise","notRequired","onSubmit","formikProps","values","isSubmitting","console","log","size","dispatch","useDispatch","history","useHistory","photoId","useParams","editedPhoto","useSelector","state","foundPhoto","photos","x","Promise","resolve","setTimeout","newPhoto","min","max","action","addPhoto","updatePhoto","push","PhotoCard","onEditClick","onRemoveClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","map","xs","md","lg","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","Images","to","editPhotoUrl","removePhoto","match","useRouteMatch","exact","path","url","MainPage","AddEditPage","NotFound"],"sourceRoot":""}